- name: Provisioning EC2 instances
  block:  
  - name: Create security group
    amazon.aws.ec2_security_group:
      name: "{{ sec_group }}"
      description: "Sec group for app"
      region: "{{ region }}"
      aws_access_key: "{{ec2_access_key}}"  # From vault as defined
      aws_secret_key: "{{ec2_secret_key}}"  # From vault as defined
      rules:                                # allows ssh on port 22
        - proto: tcp
          ports:
            - 22
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all on ssh port  
  - name: Amazon EC2 | Create Key Pair      # Create key pair for ssh
    amazon.aws.ec2_key:
      name: "{{ key_name }}"
      region: "{{ region }}"
      aws_access_key: "{{ec2_access_key}}"  # From vault as defined
      aws_secret_key: "{{ec2_secret_key}}"  # From vault as defined
      key_material: "{{ item }}"
    with_file: ./my_aws_key.pub 
  - name: Start an instance with a public IP address
    amazon.aws.ec2_instance:
      name: "public-compute-instance"
      key_name: "{{ key_name }}"
      iam_instance_profile: "{{ instance_profile_name }}"
      # vpc_subnet_id: "{{ vpc_id }}"
      instance_type: "{{ instance_type }}"
      security_group: "{{ sec_group }}"
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      region: "{{ region }}"
      network:
        assign_public_ip: true
      image_id: "{{ image }}"
      tags:
        Environment: Testing
        Name: centralized-relay 
    register: ec2_result
  # Always require the 'create_ec2' tag to provision EC2 instance
  # tags: ['never', 'create_ec2']
  - name: Set relay instance public IP as a fact
    set_fact:
      relay_instance_public_ip: "{{ ec2_result.instances[0].public_ip_address }}"
  - name: Print ec2 result
    debug:
      msg: "{{ ec2_result }}"

  - name: Print the public IP
    debug:
      msg: "The EC2 instance public IP is {{ relay_instance_public_ip }}"
  - name: Update inventory with new EC2 instance IP
    local_action:
      module: lineinfile
      path: inventory.txt
      line: "centralized-relay ansible_host={{ relay_instance_public_ip }} ansible_user=ubuntu"
      create: yes
      state: present
- name: Facts
  block: # this block prints out instance data  
  - name: Get instances facts
    ec2_instance_info:
      aws_access_key: "{{ ec2_access_key }}"
      aws_secret_key: "{{ ec2_secret_key }}"
      region: "{{ region }}"
    register: result  
  - name: Instances ID
    debug:
      msg: "ID: {{ item.instance_id }} - State: {{ item.state.name }} - Public DNS: {{ item.public_dns_name }} - Public IP: {{ item.public_ip_address }}"
    loop: "{{ result.instances }}"
  tags: always
